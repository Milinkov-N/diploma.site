<div class="lection">
    <div class="section-name">Основы операционных систем</div>

    <h1>Лекция 1: "Понятие и назначение файловой системы NFS. Работа с файлами."</h1>

    <p>Сетевая файловая система (Network File System – NFS) служит для обеспечения доступа компьютерам сети к общим каталогам на сервере. Централизованное хранение файлов на сервере облегчает организацию работы в большой сети, особенно там, где один и тот же пользователь может работать в разное время на разных компьютерах.</p>

    <h2>Задачи NFS</h2>

    <p>С помощью файлового сервера решается сразу несколько задач:</p>

    <p><b>1.</b>регулярное резервное копирование всех данных: нереально выполнять регулярное копирование данных с нескольких десятков или сотен компьютеров, но вполне реально – с единственного сервера или нескольких серверов;</p>
    <p><b>2.</b>повышение надежности хранения данных: глупо в каждый компьютер в сети устанавливать RAID-массив, ведь подавляющее большинство файлов в компьютере, таких, как установленные пакеты программ, проще установить заново, чем защищать их от сбоя; но совершенно разумно укомплектовать файловый сервер аппаратным RAID-массивом или организовать там программный RAID-массив, хотя бы простое зеркалирование дисков;</p>
    <p><b>3.</b>уменьшение стоимости хранения данных: дорого и неэффективно в каждый компьютер устанавливать огромный диск на случай, если потребуется хранить много данных, но на сервере вполне можно установить масштабируемую дисковую подсистему большого объема;</p>

    <h2>Описание NFS</h2>

    <p>Служба NFS позволяет серверу обеспечить разделяемый доступ к указанным каталогам его локальной файловой системы, а клиенту – монтировать эти каталоги так же, как если бы они были локальными каталогами клиента.</p>

    <div class="note">
        <div class="content">
            <p><b>Заметка: </b>NFS была разработана компанией Sun Microsystems и оказалась настолько удачной, что ее реализации были воплощены разными компаниями почти для всех операционных систем. Существует несколько принципиально разных реализаций NFS. Достаточно распространена версия NFS 2.0, хотя уже в Solaris 2.5 была введена NFS 3.0.</p>
        </div>
        <div class="icon">
            <img src="img/note_img.svg" alt="image">
        </div>
    </div>

    <h3>Процедура монтирования общего каталога через NFS</h3>
    
    <p>Клиент NFS посылает запрос на монтирование удаленному компьютеру, который предоставляет свою файловую систему (обычно – некоторую ее часть) для общего пользователя. При этом говорят, что сервер NFS "экспортирует" тот или иной каталог (подразумевается – с подкаталогами). Запрос от клиента NFS попадает на обработку демону mountd. Тот выдает клиенту NFS специальный ключ. Этот ключ является идентификатором, который однозначно идентифицирует каталог, смонтированный по сети.</p>
    
    <p>По NFS можно смонтировать как целые файловые системы, так и отдельные каталоги. Из соображений безопасности запрещено монтировать каталоги "через раздел". Это означает, что если каталог /var расположен на одном разделе диска, а каталог /var/adm – на другом, то при монтировании каталога /var каталог /var/adm не будет автоматически смонтирован. Если требуется монтировать те подкаталоги экспортируемого каталога, которые расположены в другой файловой системе (на другом разделе), следует экспортировать их отдельно и указывать в /etc/dfs/dfstab еще один разделяемый каталог – тот самый подкаталог с другого раздела.</p>

    <p>Ключ, выданный клиенту при монтировании и идентифицирующий сеанс работы с данным удаленным каталогом, сохраняется при перезагрузке NFS-сервера, чтобы после восстановления его работы клиенты, замершие в ожидании, продолжили работу с удаленным сервером как ни в чем ни бывало. При демонтировании и новом монтировании файловой системы через NFS ключ обычно изменяется. На практике перезагрузка NFS-сервера все-таки может привести к сбою в работе клиентского приложения, особенно, если приложение читает или записывает файл в удаленный каталог во время перезагрузки.

    После монтирования файловой системы через NFS клиент посылает серверу запросы на передачу и прием файлов, эти запросы обрабатывает демон nfsd.

    Демонтирование файловой системы выполняется также, как и демонтирование любой другой файловой системы – командой umount.</p>

    <p>Ниже будут обсуждены следующие аспекты настройки службы клиент-сервер в сети:</p>

    <p><b>1.</b>определение списка каталогов на сервере, которые должны быть общими;</p>

    <p><b>2.</b>определение прав доступа к этим каталогам;</p>
    
    <p><b>3.</b>аутентификация и назначение прав доступа в NFS;</p>
    
    <p><b>4.</b>настройка сервера NFS, запуск необходимых программ;</p>

    <p><b>5.</b>настройка клиентов NFS, монтирование удаленных каталогов.</p>

    <h2>Настройка NFS-сервера</h2>

    <p>Для настройки NFS сервера нам потребуется выполнить настройку как минимум трех приложений: rpcbind, mountd и nfsd. Прежде всего, создадим файл /etc/dfs/dfstab, в котором опишем экспортируемые каталоги; в отличие от других систем UNIX, Solaris требует указать здесь не просто список каталогов с параметрами монтирования, а набор команд share, которые фактически и запускают экспорт каталогов. Таким образом, получается, что /etc/dfs/dfstab – это скрипт, который выполняется для того, чтобы сделать общие каталоги доступными для монтирования через сеть.</p>

    <h3>rpcbind: объявление служб RPC</h3>

    <p>Для начала следует запустить программу rpcbind, если она еще не запущена. Скорее всего, она запускается при старте вашей системы, если это действительно Solaris. Эта программа, как мы помним, преобразует номера вызовов процедур RPC в номера портов TCP и UDP. При запуске любого RPC-сервера, т.е. программы, работающей с протоколом RPC, программа rpcbind получает от этого RPC-сервера информацию о том, какие номера процедур RPC он намерен обслуживать и через какой порт TCP (UDP) ему следует направлять запросы.</p>
    
    <p>Когда клиент деалет RPC-вызов, сперва происходит выяснение требуемого номера порта на машине сервера у rpcbind.</p>
    
    <p>Поэтому rpcbind должен быть запущен до того, как будет запущен любой из RPC-серверов. При аварийном завершении rpcbind необходимо вначале перезапустить rpcbind, и затем перезапустить все RPC-серверы.</p>
    
    <p>Для проверки готовности всех служб NFS к работе через rpcbind используется команда rpcinfo -p:</p>

    <p>rpcinfo -p
program vers proto port service <br>
100000 4 tcp 111 rpcbind <br>
100000 3 tcp 111 rpcbind <br>
100000 2 tcp 111 rpcbind    <br>
100000 4 udp 111 rpcbind    <br>
100000 3 udp 111 rpcbind    <br>
100000 2 udp 111 rpcbind    <br>
100232 10 udp 32772 sadmind <br>
100083 1 tcp 32771  <br>
100221 1 tcp 32772  <br>
100068 2 udp 32773  <br>
100068 3 udp 32773  <br>   
100068 4 udp 32773  <br>    
100068 5 udp 32773  <br>
100229 1 tcp 32773 metad    <br>
100230 1 tcp 32774 metamhd  <br>
100242 1 tcp 32775 metamedd <br>
100001 2 udp 32774 rstatd   <br>
100001 3 udp 32774 rstatd   <br>
100001 4 udp 32774 rstatd   <br>
100002 2 udp 32775 rusersd  <br>   
100002 3 udp 32775 rusersd  <br>
100002 2 tcp 32776 rusersd  <br>
100002 3 tcp 32776 rusersd  <br>
100008 1 udp 32776 walld    <br>
100012 1 udp 32777 sprayd   <br>
100011 1 udp 32778 rquotad  <br>
100024 1 udp 32779 status   <br>
100024 1 tcp 32777 status   <br>
100133 1 udp 32779  <br>
100133 1 tcp 32777  <br>
100021 1 udp 4045 nlockmgr <br>
100021 2 udp 4045 nlockmgr  <br>
100021 3 udp 4045 nlockmgr  <br>
100021 4 udp 4045 nlockmgr <br>
100021 1 tcp 4045 nlockmgr  <br>
100021 2 tcp 4045 nlockmgr  <br>
100021 3 tcp 4045 nlockmgr <br>
100021 4 tcp 4045 nlockmgr <br>
300598 1 udp 32784 <br>
300598 1 tcp 32781 <br>
805306368 1 udp 32784 <br>
805306368 1 tcp 32781 <br>
100249 1 udp 32785 <br>
100249 1 tcp 32782 <br>
1289637086 5 tcp 32787 <br>
1289637086 1 tcp 32787 <br>
100005 1 udp 32814 mountd <br>
100005 2 udp 32814 mountd <br>
100005 3 udp 32814 mountd <br>
100005 1 tcp 33201 mountd <br>
100005 2 tcp 33201 mountd <br>
100005 3 tcp 33201 mountd <br>
100003 2 udp 2049 nfs <br>
100003 3 udp 2049 nfs <br>
100227 2 udp 2049 nfs_acl <br>
100227 3 udp 2049 nfs_acl <br>
100003 2 tcp 2049 nfs   <br>
100003 3 tcp 2049 nfs   <br>
100227 2 tcp 2049 nfs_acl <br>
100227 3 tcp 2049 nfs_acl

</p>

    <div class="quest">
        <h3>*Вопрос по лекции*?</h3>
        <div class="answers">
            <div class="answer-box">
                <label for="answ1">Вариант ответа №1</label>
                <input type="radio" name="answer1" id="answ1">
            </div>
            <div class="answer-box">
                <label for="answ1">Вариант ответа №2</label>
                <input type="radio" name="answer1" id="answ2">
            </div>
            <div class="answer-box">
                <label for="answ1">Вариант ответа №3</label>
                <input type="radio" name="answer1" id="answ3">
            </div>
            <div class="answer-box">
                <label for="answ1">Вариант ответа №4</label>
                <input type="radio" name="answer1" id="answ4">
            </div>
        </div>
        
        <input class="submit" type="submit" value="Подтвердить">
    </div>
    <a href="includes/lection_handler.php?section=oper_sys&topic=introduction&page=lection&num=5"><button class="complete-btn">Продолжить</button></a>
</div>